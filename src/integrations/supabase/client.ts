// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { SUPABASE_CERTIFICATE, validateSupabaseCertificate } from '@/config/certificates';

const SUPABASE_URL = "https://vsvhkkalfziuyttwityc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZzdmhra2FsZnppdXl0dHdpdHljIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTIxODcwMTYsImV4cCI6MjA2Nzc2MzAxNn0.p-fJO01t2--lAGT3KIXghVHA_IWp5L7XiK5D2XeV0C0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: {
      'X-Client-Info': 'foodvrse-web',
    },
  },
  // Certificate validation
  db: {
    schema: 'public',
  },
});

// Certificate validation for Supabase connections
export const validateSupabaseConnection = async () => {
  try {
    // Test connection and validate certificate
    const { data, error } = await supabase.from('platform_impact_metrics').select('count').limit(1);
    
    if (error) {
      console.error('Supabase connection error:', error);
      return false;
    }
    
    // Log certificate information
    console.log('Supabase Root 2021 CA Certificate:', {
      name: SUPABASE_CERTIFICATE.name,
      validFrom: SUPABASE_CERTIFICATE.validFrom,
      validTo: SUPABASE_CERTIFICATE.validTo,
      issuer: SUPABASE_CERTIFICATE.issuer
    });
    
    return true;
  } catch (error) {
    console.error('Supabase certificate validation error:', error);
    return false;
  }
};

// Initialize certificate validation
validateSupabaseConnection();